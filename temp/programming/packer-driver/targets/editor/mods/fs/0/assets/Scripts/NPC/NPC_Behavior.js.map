{"version":3,"sources":["file:///D:/IEC/Testing/Amobear_Supermarket/assets/Scripts/NPC/NPC_Behavior.ts"],"names":["_decorator","Component","easing","log","Node","SkeletalAnimation","tween","GameInfo","ccclass","property","NPC_Behavior","start","currentNPC_ID","Number","node","name","split","nextStand","updateStandForNPC","currentItems","currentSuccessClick","isDonePayment","setRotationFromEuler","getComponent","play","to","position","NPC_DoorStand","smooth","call","active","NPC_StandPoints","rotate","isNPCDoneMove","isCanTouch","update","dt","isPaid","tien","scheduleOnce","NPCpaidTimes","isWaitingToGetChange"],"mappings":"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","sourcesContent":["import { _decorator, Component, easing, log, Node, SkeletalAnimation, tween } from 'cc';\r\nimport { GameInfo } from '../Const/GameInfo';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n@ccclass('NPC_Behavior')\r\nexport class NPC_Behavior extends Component {\r\n\r\n    @property(Node)\r\n    tien: Node = null;\r\n\r\n    currentNPC_ID: number = null;\r\n    isPaid: boolean = false;\r\n    isWaitingToGetChange: boolean = false;\r\n\r\n\r\n    protected start(): void {\r\n        // setup NPC id\r\n        this.currentNPC_ID = Number(this.node.name.split(\"_\")[1]);\r\n        this.nextStand(false);\r\n    }\r\n\r\n\r\n    public updateStandForNPC(): void {\r\n        // this.currentNPC_ID -= 1;\r\n        GameInfo.currentItems = GameInfo.currentSuccessClick;\r\n        let isDonePayment: boolean = false;\r\n        if (this.currentNPC_ID < GameInfo.currentSuccessClick) isDonePayment = true;\r\n        this.nextStand(isDonePayment);\r\n    }\r\n\r\n\r\n    public nextStand(isDonePayment: boolean): void {\r\n\r\n        // GameInfo.isNPCDoneMove = false;\r\n\r\n        // GameInfo.isCanTouch = false;\r\n\r\n        this.node.setRotationFromEuler(0, -90, 0);\r\n\r\n        this.node.getComponent(SkeletalAnimation).play(\"walking\");\r\n\r\n        if (isDonePayment) {\r\n            tween(this.node)\r\n                .to(1, { position: GameInfo.NPC_DoorStand }, { easing: easing.smooth })\r\n                .call(() => this.node.active = false)\r\n                .start();\r\n        }\r\n        else {\r\n            log(\"updateId:\", this.currentNPC_ID);\r\n\r\n            tween(this.node)\r\n                .to(1, { position: GameInfo.NPC_StandPoints[this.currentNPC_ID - GameInfo.currentSuccessClick].position }, { easing: easing.smooth })\r\n                .call(() => {\r\n\r\n                    this.node.setRotationFromEuler(0, GameInfo.NPC_StandPoints[this.currentNPC_ID - GameInfo.currentSuccessClick].rotate, 0);\r\n\r\n                    GameInfo.isNPCDoneMove = true;\r\n\r\n                    GameInfo.isCanTouch = true;\r\n\r\n                    this.node.getComponent(SkeletalAnimation).play(\"idle\");\r\n                })\r\n                .start();\r\n        }\r\n    }\r\n\r\n\r\n    protected update(dt: number): void {\r\n        // pay money\r\n        if (this.currentNPC_ID === GameInfo.currentSuccessClick && GameInfo.currentItems === 0 && !this.isPaid) {\r\n            this.isPaid = true;\r\n            this.tien.active = true;\r\n            this.node.getComponent(SkeletalAnimation).play(\"Payment_CardStart\");\r\n            this.scheduleOnce(() => this.node.getComponent(SkeletalAnimation).play(\"Payment_CardIdle\"), 0.2);\r\n        }\r\n\r\n        // waiting to get change\r\n        if (this.isPaid && this.currentNPC_ID === GameInfo.NPCpaidTimes && !this.isWaitingToGetChange) {\r\n            this.isWaitingToGetChange = true;\r\n            this.tien.active = false;\r\n            this.node.getComponent(SkeletalAnimation).play(\"idle\");\r\n        }\r\n    }\r\n}\r\n\r\n"]}